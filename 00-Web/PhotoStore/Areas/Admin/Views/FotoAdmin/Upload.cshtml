@model PhotoStore.ViewModel.UploadFotoViewModel

@{
    ViewBag.Title = "Upload de Fotos";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section scripts {

    <script type="text/javascript">

        $(function () {


        });

    </script>

}

<h2>Upload de Fotos</h2>




@using (Html.BeginForm("Upload", "FotoAdmin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div>
        <div class="text-right">
            @Html.ActionLink("Voltar à lista", "Index", null, new { @class = "btn btn-primary", role = "button" })
        </div>
    </div>

    <div class="container-fluid bordered spacer">

        <div class="form-horizontal">
            <fieldset>
                @Html.ValidationSummary(false, "Erros encontrados", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)


                <div class="row sp-vertical">
                    <div class="col-sm-6">
                        <div class="form-group">

                            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "col-form-label" })
                            @Html.TextBoxFor(model => model.Nome, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })

                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "col-form-label" })
                            @Html.TextBoxFor(model => model.Numero, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>




                <div class="row sp-vertical">
                    <div class="col-sm-6">
                        <div class="form-group">

                            @Html.LabelFor(model => model.EventoId, htmlAttributes: new { @class = "col-form-label " })
                            @Html.DropDownListFor(model => model.EventoId, ViewBag.ComboEventos as SelectList, "Selecione...", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.EventoId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group">

                            @Html.LabelFor(model => model.ArquivoAnexo, htmlAttributes: new { @class = "col-form-label " })
                            <input type="file" name="ArquivoAnexo" id="ArquivoAnexo" class="form-control-file" />
                            @Html.ValidationMessageFor(model => model.ArquivoAnexo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>


                <div class="row sp-vertical">
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Vitrine, htmlAttributes: new { @class = "col-form-label" })
                            @Html.CheckBoxFor(model => model.Vitrine, new { @class = "checkbox" })
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group">

                            @Html.LabelFor(model => model.CapaDeEvento, htmlAttributes: new { @class = "col-form-label" })
                            @Html.CheckBoxFor(model => model.CapaDeEvento, new { @class = "checkbox" })

                        </div>
                    </div>

                </div>


                <div class="form-group  text-right">
                    <input type="submit" value="Salvar" class="btn btn-primary" />
                </div>

            </fieldset>



        </div>
    </div>



}